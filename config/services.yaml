# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $dataDir: '%kernel.project_dir%/data'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Migrations,Repository,Tests,Domain}'

    # controllers are imported separately to make sure they
    # have the tag that allows actions to type-hint services
    App\Application\:
        resource: '../src/Application'
        tags: ['controller.service_arguments']

    App\Application\FlightRequestController:
        arguments:
            $producer: '@old_sound_rabbit_mq.save_flight_info_producer'
        tags: ['controller.service_arguments']

    # PicoFeed\Config\Config: ~
    # PicoFeed\Reader\Reader: ~

    # httpClient.event_store:
    #     class: GuzzleHttp\Client
    #     arguments:
    #         - {'base_uri': '%env(EVENT_STORE_URI)%'}

    httpClient.flight:
        class: GuzzleHttp\Client
        arguments: 
            - {'base_uri': '%env(FARE_PORTAL_URL)%'}

    httpClient.overnight:
        class: GuzzleHttp\Client
        arguments: 
            - {'base_uri': '%env(AIRBNB_URL)%'}

    # MongoDB\Client:
    #     arguments:
    #         $uri: '%env(MONGO_URL)%'
    #         $uriOptions: {'username': '%env(MONGO_USERNAME)%', 'password': '%env(MONGO_PASSWORD)%'}

    App\Infrastructure\EventStore\EventStoreWriteStream:
        arguments:
            $httpClient: '@httpClient.event_store'
            $esLogin: '%env(EVENT_STORE_LOGIN)%'
            $esPassword: '%env(EVENT_STORE_PASSWORD)%'

    App\Infrastructure\EventStore\EventStoreReadStream:
        arguments:
            $esLogin: '%env(EVENT_STORE_LOGIN)%'
            $esPassword: '%env(EVENT_STORE_PASSWORD)%'
            $esUri: '%env(EVENT_STORE_URI)%'

    App\Infrastructure\Flight\FlightOffers:
        arguments:
            $httpClient: '@httpClient.flight'
            $loginCredentials: '%env(FARE_PORTAL_LOGIN)%'
            $passwordCredentials: '%env(FARE_PORTAL_PASSWORD)%'

    App\Infrastructure\Flight\CodeToAirportMapper:
        arguments:
            $airportFilePath: '%kernel.project_dir%/data/airports.json'

    App\Infrastructure\Overnight\Overnights:
        arguments:
            $client: '@httpClient.overnight'
            $overnightApiKey: '%env(AIRBNB_KEY)%'


